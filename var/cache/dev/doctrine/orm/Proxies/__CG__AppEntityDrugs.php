<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Drugs extends \App\Entity\Drugs implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'nameDrugs', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'consigne', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'slug', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'drugsConsommers', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'formDrugs', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'categoryDrugs', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'pharmacyAvailabeDrugs', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'isAuthorised'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'nameDrugs', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'consigne', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'slug', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'drugsConsommers', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'formDrugs', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'categoryDrugs', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'pharmacyAvailabeDrugs', '' . "\0" . 'App\\Entity\\Drugs' . "\0" . 'isAuthorised'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Drugs $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNameDrugs(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameDrugs', []);

        return parent::getNameDrugs();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameDrugs(string $nameDrugs): \App\Entity\Drugs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameDrugs', [$nameDrugs]);

        return parent::setNameDrugs($nameDrugs);
    }

    /**
     * {@inheritDoc}
     */
    public function getConsigne(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConsigne', []);

        return parent::getConsigne();
    }

    /**
     * {@inheritDoc}
     */
    public function setConsigne(string $consigne): \App\Entity\Drugs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConsigne', [$consigne]);

        return parent::setConsigne($consigne);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): \App\Entity\Drugs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug(string $slug): \App\Entity\Drugs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', [$slug]);

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getDrugsConsommers(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDrugsConsommers', []);

        return parent::getDrugsConsommers();
    }

    /**
     * {@inheritDoc}
     */
    public function addDrugsConsommer(\App\Entity\DrugsConsomers $drugsConsommer): \App\Entity\Drugs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDrugsConsommer', [$drugsConsommer]);

        return parent::addDrugsConsommer($drugsConsommer);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDrugsConsommer(\App\Entity\DrugsConsomers $drugsConsommer): \App\Entity\Drugs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDrugsConsommer', [$drugsConsommer]);

        return parent::removeDrugsConsommer($drugsConsommer);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormDrugs(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormDrugs', []);

        return parent::getFormDrugs();
    }

    /**
     * {@inheritDoc}
     */
    public function addFormDrug(\App\Entity\FormDrugs $formDrug): \App\Entity\Drugs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFormDrug', [$formDrug]);

        return parent::addFormDrug($formDrug);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFormDrug(\App\Entity\FormDrugs $formDrug): \App\Entity\Drugs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFormDrug', [$formDrug]);

        return parent::removeFormDrug($formDrug);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryDrugs(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryDrugs', []);

        return parent::getCategoryDrugs();
    }

    /**
     * {@inheritDoc}
     */
    public function addCategoryDrug(\App\Entity\CategoryDrugs $categoryDrug): \App\Entity\Drugs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategoryDrug', [$categoryDrug]);

        return parent::addCategoryDrug($categoryDrug);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategoryDrug(\App\Entity\CategoryDrugs $categoryDrug): \App\Entity\Drugs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategoryDrug', [$categoryDrug]);

        return parent::removeCategoryDrug($categoryDrug);
    }

    /**
     * {@inheritDoc}
     */
    public function getPharmacyAvailabeDrugs(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPharmacyAvailabeDrugs', []);

        return parent::getPharmacyAvailabeDrugs();
    }

    /**
     * {@inheritDoc}
     */
    public function addPharmacyAvailabeDrug(\App\Entity\PharmacyAvailabeDrugs $pharmacyAvailabeDrug): \App\Entity\Drugs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPharmacyAvailabeDrug', [$pharmacyAvailabeDrug]);

        return parent::addPharmacyAvailabeDrug($pharmacyAvailabeDrug);
    }

    /**
     * {@inheritDoc}
     */
    public function removePharmacyAvailabeDrug(\App\Entity\PharmacyAvailabeDrugs $pharmacyAvailabeDrug): \App\Entity\Drugs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePharmacyAvailabeDrug', [$pharmacyAvailabeDrug]);

        return parent::removePharmacyAvailabeDrug($pharmacyAvailabeDrug);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsAuthorised(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsAuthorised', []);

        return parent::getIsAuthorised();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsAuthorised(bool $isAuthorised): \App\Entity\Drugs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsAuthorised', [$isAuthorised]);

        return parent::setIsAuthorised($isAuthorised);
    }

}
