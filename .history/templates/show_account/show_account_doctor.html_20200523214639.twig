{% extends "show_account/main_account_show.html.twig" %}
{% block header_picture %}{{asset('bower_components/images/doctor-header.jpg') }}{% endblock %}
              {% block picture %}
              {% if doctor.pictureProfil %}             
              {% else %}
              <img class="photo" src="{{asset('bower_components/images/notImageProfile.png') }}" 
               alt="Profile image not available">
              {% endif %}
              {% endblock %}
            {% block entityName %}
            <h4 class="name">{{doctor.fullName}}</h4>
            <p class="info">{{doctor.profession}}</p>
            {% endblock entityName %}
                {% block numberPhone %}
                <p class="number-stat">{{doctor.numberPhone|replace({'-':' ' }) }} </p>  
                {% endblock numberPhone %}
                {% block expertiseInfo %}<span class="info-titre">Domaines d'Expertise</span>          
                <p class="desc">{% for expertise in doctor.expertise %}<span class="badge badge-primary">{{expertise.expertiseName}} </span> {% endfor %}</p>
                <div class="social">{% endblock %}
              {% if doctor.doctorSocialNetworks is defined %}
              {% block linksSocial %}
              
              {% for socialLinks in doctor.doctorSocialNetworks %}
              {% if socialLinks.socialNetworks.socialName|lower == "facebook" %}
             <a href="{{socialLinks}}"><i class="fa fa-facebook-square" aria-hidden="true"></i></a> 
              {% endif %}
              {% if socialLinks.socialNetworks.socialName|lower == "twitter" %}
             <a href="{{socialLinks}}"> <i class="fa fa-twitter-square" aria-hidden="true"></i></a> 
              {% endif %}
              {% if socialLinks.socialNetworks.socialName|lower == "linkedin" %}
              <a href="{{socialLinks}}"><i class="fa fa-linkedin-square" aria-hidden="true"></i></a> 
              {% endif %}
              {% if socialLinks.socialNetworks.socialName|lower == "google+" %}
            <a href="{{socialLinks}}">  <i class="fa fa-google-square" aria-hidden="true"></i></a> 
              {% endif %}
                
              {% endfor %}
              {% endblock %}
              {% else %}
              {% endif %}
                
              {% block input %}
              <input type="radio" id="tab-profile1" name="tab-profile-control" checked>
              <input type="radio" id="tab-profile2" name="tab-profile-control">
              <input type="radio" id="tab-profile3" name="tab-profile-control">    
              {% endblock %}         
                  {% block liName %}
                  <li title="Presentation"><label for="tab-profile1" role="button"><i class="fa fa-book"></i><br><span>Presentation</span></label></li>
                  <li title="Informations"><label for="tab-profile2" role="button"><i class="fa fa-info-circle"></i> <br><span>Informations</span></label></li>
                  <li title="Carte"><label for="tab-profile3" role="button"> <i class="fa fa-map"></i> <br><span>Carte</span></label></li> 
                  {% endblock %}
                  {% block content %}
                  <section>
                      {{doctor.presentation}}
                    </section>
                        <section>
                           <p> <span class="info-titre">Tarifs</span> : {{doctor.fullTarif}}</p>
                          <p>  <span class="info-titre">Langue Parlées</span>: {% for langue in doctor.language %} {{langue}} {% endfor %}</p>
                          <p> <span class="info-titre">Paiement accèptés </span>: {% for means in doctor.meansPayment %} {{means}} {% endfor %}</p>
                          <p> <span class="info-titre">Moyens d'accès</span> :  {% for info in doctor.praticalInfos %} {{info}} {% endfor %}</p>
                          <p> <span class="info-titre">Remboursement(s) accèpté(s)</span> : {% for refund in doctor.refund %} {{refund}} {% endfor %}</p>
                          </section>
                        <section class="container">
                          <div id="map" data-lat="{{doctor.location.latitude}}" data-nameLocation="{{doctor.location.nameLocation}}" data-lon="{{doctor.location.longitude}}" class="col-12"></div>
                          <div class="col-12 mt-15" id="calendar-holder"></div>
                          </section>
                  {% endblock %}
 {% block javascripts %}

{{ parent() }}
<script src="{{asset('bower_components/js/leaflet.js')}}"></script>
<script>

    let lat =document.querySelector('[data-lat]')
    let lon =document.querySelector('[data-lon]')
    let nameLocation=document.querySelector('[data-nameLocation]')

    window.onload=()=>{
    if (typeof elementsLatitude === undefined && typeof elementLongitude === undefined) {
    
        
    } else{
        viewLat=latUser.dataset.latuser
        viewLon=lonUser.dataset.lonuser
        userDistance=Number(userDistance.dataset.userdistance)
        
        myMap = L.map('map').setView([viewLat, viewLon], 14);
    L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
    attribution: 'Données &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a>/ODbl -rendu  <a href="https://www.openstreetmap.org/">OpenStreetMap</a>',
    minZoom: 10,
    maxZoom: 20,

}).addTo(myMap);    
let doctorIcon = L.icon({
    iconUrl: "{{asset('bower_components/mainRefMed/doctor.png')}}",
    iconSize:     [35, 50], // size of the icon
    iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location
    popupAnchor:  [-3, -90] // point from which the popup should open relative to the iconAnchor
});
let latitudes=Array.from(elementsLatitude).map(item => item.dataset.lat)
let longitudes=Array.from(elementLongitude).map(item => item.dataset.lon)
let locations=Array.from(elementLongitude).map(item => item.dataset.location)
let userPosition=[viewLat, viewLon]
myMap.panTo(userPosition)
let circle = L.circle(userPosition, {
                color: '#57b99b',
                fillColor: '#57b99b',
                fillOpacity: 0.3,
                radius: userDistance*1000 ,
            }).addTo(myMap);
    let marker = L.marker([viewLat, viewLon]).addTo(myMap)
    marker.bindPopup("Votre position")
for (let i = 0; i < latitudes.length; i++) {
    let marker = L.marker([latitudes[i], longitudes[i]], {icon: doctorIcon}).addTo(myMap)
    marker.bindPopup(locations[i])

}


}
}
</script>
{% endblock %}
