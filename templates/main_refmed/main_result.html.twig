{% extends 'appMain.html.twig' %}
{%block addStyleSheets%}
	<link href="{{asset('bower_components/js/leaflet/leaflet.css')}}" rel="stylesheet">
{%endblock %}
{% block body %}
{% include "includeApp/_navigation.html.twig" %}
{% block contain_result %}
{% block header_map %}
<section class="single-hero-slide bg-img bg-overlay-white" id="map" data-latUser="{{latUser}}" data-lonUser="{{lonUser}}" style="height: 400px;" data-userDistance="{{userDistance}}" >
</section>
{% endblock header_map %}
{% block result_content %}       
{% endblock result_content %}
{% endblock %}

{% include "includeApp/_footer.html.twig" %}

{% endblock body %}

{% block javascripts %}
{{ parent() }}
<script src="{{asset('bower_components/js/leaflet.js')}}"></script>
<script>

    let elementsLatitude=document.querySelectorAll('[data-lat]')
    let elementLongitude =document.querySelectorAll('[data-lon]')
    let latUser =document.querySelector('[data-latUser]')
    let lonUser =document.querySelector('[data-lonUser]')
    let userDistance=document.querySelector('[data-userDistance]')

    window.onload=()=>{
    if (typeof elementsLatitude === undefined && typeof elementLongitude === undefined) {
    
        
    } else{
        viewLat=latUser.dataset.latuser
        viewLon=lonUser.dataset.lonuser
        userDistance=Number(userDistance.dataset.userdistance)
        
        myMap = L.map('map').setView([viewLat, viewLon], 14);
    L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
    attribution: 'Donn√©es &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a>/ODbl -rendu  <a href="https://www.openstreetmap.org/">OpenStreetMap</a>',
    minZoom: 10,
    maxZoom: 20,

}).addTo(myMap);    
let doctorIcon = L.icon({
    iconUrl: "{{asset('bower_components/mainRefMed/doctor.png')}}",
    iconSize:     [35, 50], // size of the icon
    iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location
    popupAnchor:  [-3, -90] // point from which the popup should open relative to the iconAnchor
});
let latitudes=Array.from(elementsLatitude).map(item => item.dataset.lat)
let longitudes=Array.from(elementLongitude).map(item => item.dataset.lon)
let locations=Array.from(elementLongitude).map(item => item.dataset.location)
let userPosition=[viewLat, viewLon]
myMap.panTo(userPosition)
let circle = L.circle(userPosition, {
                color: '#57b99b',
                fillColor: '#57b99b',
                fillOpacity: 0.3,
                radius: userDistance*1000 ,
            }).addTo(myMap);
    let marker = L.marker([viewLat, viewLon]).addTo(myMap)
    marker.bindPopup("Votre position")
for (let i = 0; i < latitudes.length; i++) {
    let marker = L.marker([latitudes[i], longitudes[i]], {icon: doctorIcon}).addTo(myMap)
    marker.bindPopup(locations[i])

}


}
}
</script>
{% endblock %}